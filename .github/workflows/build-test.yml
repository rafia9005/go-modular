name: Docker Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_HOST: "%"
          MYSQL_ROOT_PASSWORD: root_admin
          MYSQL_DATABASE: backend_modules
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          TZ: "Asia/Jakarta"
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot_admin || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create config-prod.toml
        run: |
          cat <<EOT > config-prod.toml
          [server]
          app_name = "Backend Modules"
          mode = "info"
          port = "9000"
          http_timeout = 60
          cache_expired = 24
          cache_purged = 60
          api_version = "1"

          [database]
          db_driver = "mysql"
          db_host = "db"
          db_port = "3306"
          db_name = "backend_modules"
          db_username = "user"
          db_password = "password"

          [pool]
          conn_idle = 200
          conn_max = 300
          conn_lifetime = 60

          [jwt]
          day_expired = 60
          signature_key = "SuperShy!"
          EOT

      - name: Build Docker Image
        run: |
          docker build -t backend_modules:latest .

      - name: Run Docker Compose
        run: |
          docker-compose up -d

      - name: Wait for Database to be ready
        run: |
          docker run --rm --network="host" mysql:8.0 \
          bash -c "until mysqladmin ping -h localhost -uroot -proot_admin; do sleep 1; done"

      - name: Run Tests
        run: |
          docker exec backend_modules go test ./...

      - name: Shutdown Docker Compose
        if: always()
        run: |
          docker-compose down